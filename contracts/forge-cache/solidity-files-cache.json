{
  "_format": "ethers-rs-sol-cache-3",
  "paths": {
    "artifacts": "out",
    "build_infos": "out/build-info",
    "sources": "src",
    "tests": "test",
    "scripts": "script",
    "libraries": [
      "lib"
    ]
  },
  "files": {
    "lib/forge-std/lib/ds-test/src/test.sol": {
      "lastModificationDate": 1687938051074,
      "contentHash": "9febff9d09f18af5306669dc276c4c43",
      "sourceName": "lib/forge-std/lib/ds-test/src/test.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "DSTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "test.sol/DSTest.json"
        }
      }
    },
    "lib/forge-std/src/Base.sol": {
      "lastModificationDate": 1687938050340,
      "contentHash": "ee13c050b1914464f1d3f90cde90204b",
      "sourceName": "lib/forge-std/src/Base.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "CommonBase": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Base.sol/CommonBase.json"
        },
        "ScriptBase": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Base.sol/ScriptBase.json"
        },
        "TestBase": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Base.sol/TestBase.json"
        }
      }
    },
    "lib/forge-std/src/StdAssertions.sol": {
      "lastModificationDate": 1687938050340,
      "contentHash": "6cc2858240bcd443debbbf075490e325",
      "sourceName": "lib/forge-std/src/StdAssertions.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/StdMath.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdAssertions": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdAssertions.sol/StdAssertions.json"
        }
      }
    },
    "lib/forge-std/src/StdChains.sol": {
      "lastModificationDate": 1687938051093,
      "contentHash": "9c76820952c8f5e2fc02f872dc3afeb4",
      "sourceName": "lib/forge-std/src/StdChains.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdChains": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdChains.sol/StdChains.json"
        }
      }
    },
    "lib/forge-std/src/StdCheats.sol": {
      "lastModificationDate": 1687938051093,
      "contentHash": "24785368b480beef5cd536afd144d5cb",
      "sourceName": "lib/forge-std/src/StdCheats.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console2.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdCheats": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdCheats.sol/StdCheats.json"
        },
        "StdCheatsSafe": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdCheats.sol/StdCheatsSafe.json"
        }
      }
    },
    "lib/forge-std/src/StdError.sol": {
      "lastModificationDate": 1687938050340,
      "contentHash": "64c896e1276a291776e5ea5aecb3870a",
      "sourceName": "lib/forge-std/src/StdError.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdError": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdError.sol/stdError.json"
        }
      }
    },
    "lib/forge-std/src/StdInvariant.sol": {
      "lastModificationDate": 1687938051093,
      "contentHash": "12c06010ec43ce935ed209d5aca30828",
      "sourceName": "lib/forge-std/src/StdInvariant.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdInvariant": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdInvariant.sol/StdInvariant.json"
        }
      }
    },
    "lib/forge-std/src/StdJson.sol": {
      "lastModificationDate": 1687938050340,
      "contentHash": "2e1d13674e152408867795362d833c24",
      "sourceName": "lib/forge-std/src/StdJson.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.0, <0.9.0",
      "artifacts": {
        "stdJson": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdJson.sol/stdJson.json"
        }
      }
    },
    "lib/forge-std/src/StdMath.sol": {
      "lastModificationDate": 1687938050340,
      "contentHash": "9da8f453eba6bb98f3d75bc6822bfb29",
      "sourceName": "lib/forge-std/src/StdMath.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdMath": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdMath.sol/stdMath.json"
        }
      }
    },
    "lib/forge-std/src/StdStorage.sol": {
      "lastModificationDate": 1687938050340,
      "contentHash": "3cb9868082df39a53927db09dbc21f23",
      "sourceName": "lib/forge-std/src/StdStorage.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdStorage": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdStorage.sol/stdStorage.json"
        },
        "stdStorageSafe": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdStorage.sol/stdStorageSafe.json"
        }
      }
    },
    "lib/forge-std/src/StdStyle.sol": {
      "lastModificationDate": 1687938051093,
      "contentHash": "820e6f6b7704f0c980fae604b1e34b18",
      "sourceName": "lib/forge-std/src/StdStyle.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "StdStyle": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdStyle.sol/StdStyle.json"
        }
      }
    },
    "lib/forge-std/src/StdUtils.sol": {
      "lastModificationDate": 1687938051093,
      "contentHash": "dd923493ddd9f98777687205cfe9d646",
      "sourceName": "lib/forge-std/src/StdUtils.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdUtils": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "StdUtils.sol/StdUtils.json"
        }
      }
    },
    "lib/forge-std/src/Test.sol": {
      "lastModificationDate": 1687938051093,
      "contentHash": "bc9d74a0c612e1c2b66cca2973bcc803",
      "sourceName": "lib/forge-std/src/Test.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "Test": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Test.sol/Test.json"
        }
      }
    },
    "lib/forge-std/src/Vm.sol": {
      "lastModificationDate": 1687938051094,
      "contentHash": "93cbedbadc52c20145ebbfa27ce148c4",
      "sourceName": "lib/forge-std/src/Vm.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "Vm": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Vm.sol/Vm.json"
        },
        "VmSafe": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Vm.sol/VmSafe.json"
        }
      }
    },
    "lib/forge-std/src/console.sol": {
      "lastModificationDate": 1687938050341,
      "contentHash": "100b8a33b917da1147740d7ab8b0ded3",
      "sourceName": "lib/forge-std/src/console.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "console": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "console.sol/console.json"
        }
      }
    },
    "lib/forge-std/src/console2.sol": {
      "lastModificationDate": 1687938050341,
      "contentHash": "491ca717c1915995e78cc361485a3067",
      "sourceName": "lib/forge-std/src/console2.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "console2": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "console2.sol/console2.json"
        }
      }
    },
    "lib/forge-std/src/interfaces/IMulticall3.sol": {
      "lastModificationDate": 1687938050341,
      "contentHash": "7b131ca1ca32ef6378b7b9ad5488b901",
      "sourceName": "lib/forge-std/src/interfaces/IMulticall3.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "IMulticall3": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IMulticall3.sol/IMulticall3.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
      "lastModificationDate": 1687942170091,
      "contentHash": "5a20b2cad87ddb61c7a3a6af21289e28",
      "sourceName": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Ownable": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Ownable.sol/Ownable.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
      "lastModificationDate": 1687942170109,
      "contentHash": "5efeb93e6b1c83c754da2846c2da51a7",
      "sourceName": "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/Address.sol"
      ],
      "versionRequirement": "^0.8.2",
      "artifacts": {
        "Initializable": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Initializable.sol/Initializable.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
      "lastModificationDate": 1687942170111,
      "contentHash": "df36f7051335cd1e748b1b6463b7fdd3",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC20": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IERC20.sol/IERC20.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
      "lastModificationDate": 1687942170113,
      "contentHash": "aa849939a4ae83a4dcb2dca9b3e9e707",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC20Permit": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IERC20Permit.sol/IERC20Permit.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
      "lastModificationDate": 1687942170114,
      "contentHash": "a159c68235d1d18f16dd0a57a000daea",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SafeERC20": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "SafeERC20.sol/SafeERC20.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
      "lastModificationDate": 1687942170114,
      "contentHash": "48de4c9a3a4ae5ef66a2aa620843413f",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC721": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IERC721.sol/IERC721.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
      "lastModificationDate": 1687942170116,
      "contentHash": "efbc0d15b80a74e34dbe8da0f3e879bb",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC721Metadata": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IERC721Metadata.sol/IERC721Metadata.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol": {
      "lastModificationDate": 1687942170116,
      "contentHash": "ac43d0ff9ace16c82712150d22c71207",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC777": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IERC777.sol/IERC777.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol": {
      "lastModificationDate": 1687942170117,
      "contentHash": "268af1696d7a83a7e78a1a8f5ba1c685",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC777Recipient": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IERC777Recipient.sol/IERC777Recipient.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol": {
      "lastModificationDate": 1687942170117,
      "contentHash": "7c1ce5bc5bc5f57fe7106ba767063e08",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC777Sender": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IERC777Sender.sol/IERC777Sender.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
      "lastModificationDate": 1687942170117,
      "contentHash": "211ffd288c1588ba8c10eae668ca3c66",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/Address.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.1",
      "artifacts": {
        "Address": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Address.sol/Address.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
      "lastModificationDate": 1687942170118,
      "contentHash": "5f2c5c4b6af2dd4551027144797bc8be",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/Context.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Context": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Context.sol/Context.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
      "lastModificationDate": 1687942170120,
      "contentHash": "03e6768535ac4da0e9756f1d8a4a018a",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC165": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IERC165.sol/IERC165.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol": {
      "lastModificationDate": 1687942170120,
      "contentHash": "2236782d171d1cf915faf759eb9e49fa",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC1820Registry": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IERC1820Registry.sol/IERC1820Registry.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
      "lastModificationDate": 1687942170120,
      "contentHash": "67cf2dfe1d1c22b4ea7f242e8a17f431",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SafeCast": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "SafeCast.sol/SafeCast.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol": {
      "lastModificationDate": 1687942170121,
      "contentHash": "f6f4fda16c536e57069af40a245c985e",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SafeMath": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "SafeMath.sol/SafeMath.json"
        }
      }
    },
    "lib/protocol-monorepo/packages/ethereum-contracts/contracts/apps/SuperTokenV1Library.sol": {
      "lastModificationDate": 1687941950480,
      "contentHash": "4f86556be5b300de00922cf721a0897f",
      "sourceName": "lib/protocol-monorepo/packages/ethereum-contracts/contracts/apps/SuperTokenV1Library.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IGeneralDistributionAgreementV1.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IInstantDistributionAgreementV1.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantInflowNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantOutflowNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IFlowNFTBase.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolAdminNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolMemberNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolNFTBase.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidPool.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol"
      ],
      "versionRequirement": null,
      "artifacts": {
        "SuperTokenV1Library": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "SuperTokenV1Library.sol/SuperTokenV1Library.json"
        }
      }
    },
    "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol": {
      "lastModificationDate": 1687941950481,
      "contentHash": "145aaae35a632926e7a6c0ec3d72f28c",
      "sourceName": "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol"
      ],
      "versionRequirement": null,
      "artifacts": {
        "IConstantFlowAgreementV1": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IConstantFlowAgreementV1.sol/IConstantFlowAgreementV1.json"
        }
      }
    },
    "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IGeneralDistributionAgreementV1.sol": {
      "lastModificationDate": 1687941950481,
      "contentHash": "cf6c969d364cbbda46ec0f0be7c84ad6",
      "sourceName": "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IGeneralDistributionAgreementV1.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidPool.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol"
      ],
      "versionRequirement": ">=0.8.4",
      "artifacts": {
        "IGeneralDistributionAgreementV1": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IGeneralDistributionAgreementV1.sol/IGeneralDistributionAgreementV1.json"
        }
      }
    },
    "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IInstantDistributionAgreementV1.sol": {
      "lastModificationDate": 1687941950481,
      "contentHash": "783daf4290861f2e3a5e5f6c95420097",
      "sourceName": "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IInstantDistributionAgreementV1.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol"
      ],
      "versionRequirement": null,
      "artifacts": {
        "IInstantDistributionAgreementV1": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IInstantDistributionAgreementV1.sol/IInstantDistributionAgreementV1.json"
        }
      }
    },
    "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol": {
      "lastModificationDate": 1687941950481,
      "contentHash": "acb97791d81cf084ae7264549d1eb0c1",
      "sourceName": "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": null,
      "artifacts": {
        "BatchOperation": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Definitions.sol/BatchOperation.json"
        },
        "ContextDefinitions": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Definitions.sol/ContextDefinitions.json"
        },
        "FlowOperatorDefinitions": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Definitions.sol/FlowOperatorDefinitions.json"
        },
        "SuperAppDefinitions": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Definitions.sol/SuperAppDefinitions.json"
        },
        "SuperfluidGovernanceConfigs": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "Definitions.sol/SuperfluidGovernanceConfigs.json"
        }
      }
    },
    "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantInflowNFT.sol": {
      "lastModificationDate": 1687941950481,
      "contentHash": "adc1da30bc1648813199506550a50bfd",
      "sourceName": "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantInflowNFT.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantInflowNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantOutflowNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IFlowNFTBase.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolAdminNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolMemberNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolNFTBase.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol"
      ],
      "versionRequirement": ">=0.8.4",
      "artifacts": {
        "IConstantInflowNFT": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IConstantInflowNFT.sol/IConstantInflowNFT.json"
        }
      }
    },
    "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantOutflowNFT.sol": {
      "lastModificationDate": 1687941950481,
      "contentHash": "5b1ddc701755bb37cea0ea3394c567a6",
      "sourceName": "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantOutflowNFT.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IFlowNFTBase.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol"
      ],
      "versionRequirement": ">=0.8.4",
      "artifacts": {
        "IConstantOutflowNFT": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IConstantOutflowNFT.sol/IConstantOutflowNFT.json"
        }
      }
    },
    "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IFlowNFTBase.sol": {
      "lastModificationDate": 1687941950481,
      "contentHash": "f5b7905e3dca25320a6b731ac41dfb8a",
      "sourceName": "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IFlowNFTBase.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": ">=0.8.4",
      "artifacts": {
        "IFlowNFTBase": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IFlowNFTBase.sol/IFlowNFTBase.json"
        }
      }
    },
    "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolAdminNFT.sol": {
      "lastModificationDate": 1687941950482,
      "contentHash": "25b0e4a2eb05f7bfae69cc508776c938",
      "sourceName": "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolAdminNFT.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolNFTBase.sol"
      ],
      "versionRequirement": ">=0.8.4",
      "artifacts": {
        "IPoolAdminNFT": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IPoolAdminNFT.sol/IPoolAdminNFT.json"
        }
      }
    },
    "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolMemberNFT.sol": {
      "lastModificationDate": 1687941950482,
      "contentHash": "1d378b33e8e39f4634f5d1c4b4684c6c",
      "sourceName": "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolMemberNFT.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolNFTBase.sol"
      ],
      "versionRequirement": ">=0.8.4",
      "artifacts": {
        "IPoolMemberNFT": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IPoolMemberNFT.sol/IPoolMemberNFT.json"
        }
      }
    },
    "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolNFTBase.sol": {
      "lastModificationDate": 1687941950482,
      "contentHash": "aba36cfde93c0dae8ee53515aa4bcffe",
      "sourceName": "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolNFTBase.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": ">=0.8.4",
      "artifacts": {
        "IPoolNFTBase": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "IPoolNFTBase.sol/IPoolNFTBase.json"
        }
      }
    },
    "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol": {
      "lastModificationDate": 1687941950482,
      "contentHash": "25a7a16f7264364f214fea0aa8d00076",
      "sourceName": "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol"
      ],
      "versionRequirement": null,
      "artifacts": {
        "ISuperAgreement": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ISuperAgreement.sol/ISuperAgreement.json"
        }
      }
    },
    "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol": {
      "lastModificationDate": 1687941950482,
      "contentHash": "0b40f08d7153dd5d0b34b2f8f7308ca3",
      "sourceName": "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantInflowNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantOutflowNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IFlowNFTBase.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolAdminNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolMemberNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolNFTBase.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol"
      ],
      "versionRequirement": null,
      "artifacts": {
        "ISuperApp": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ISuperApp.sol/ISuperApp.json"
        }
      }
    },
    "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol": {
      "lastModificationDate": 1687941950482,
      "contentHash": "890fc6eda259ba8d72878d565b0d4822",
      "sourceName": "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantInflowNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantOutflowNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IFlowNFTBase.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolAdminNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolMemberNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolNFTBase.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol"
      ],
      "versionRequirement": null,
      "artifacts": {
        "ISuperToken": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ISuperToken.sol/ISuperToken.json"
        }
      }
    },
    "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol": {
      "lastModificationDate": 1687941950482,
      "contentHash": "db67b1c0d88a657aaf2959c5dc30b14f",
      "sourceName": "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantInflowNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantOutflowNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IFlowNFTBase.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolAdminNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolMemberNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolNFTBase.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol"
      ],
      "versionRequirement": null,
      "artifacts": {
        "ISuperTokenFactory": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ISuperTokenFactory.sol/ISuperTokenFactory.json"
        }
      }
    },
    "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol": {
      "lastModificationDate": 1687941950482,
      "contentHash": "4252be16b415ef4c14e7a64a111e507d",
      "sourceName": "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantInflowNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantOutflowNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IFlowNFTBase.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolAdminNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolMemberNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolNFTBase.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol"
      ],
      "versionRequirement": null,
      "artifacts": {
        "ISuperfluid": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ISuperfluid.sol/ISuperfluid.json"
        }
      }
    },
    "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol": {
      "lastModificationDate": 1687941950482,
      "contentHash": "060a9c933105386d41614dfc1576f8f4",
      "sourceName": "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantInflowNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantOutflowNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IFlowNFTBase.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolAdminNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolMemberNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolNFTBase.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol"
      ],
      "versionRequirement": null,
      "artifacts": {
        "ISuperfluidGovernance": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ISuperfluidGovernance.sol/ISuperfluidGovernance.json"
        }
      }
    },
    "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidPool.sol": {
      "lastModificationDate": 1687941950483,
      "contentHash": "1e783372bebdb84379dfd9de0d2f2571",
      "sourceName": "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidPool.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol"
      ],
      "versionRequirement": ">=0.8.4",
      "artifacts": {
        "ISuperfluidPool": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ISuperfluidPool.sol/ISuperfluidPool.json"
        }
      }
    },
    "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol": {
      "lastModificationDate": 1687941950483,
      "contentHash": "a70744cb4653c252781ca92be0a7034b",
      "sourceName": "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol"
      ],
      "versionRequirement": null,
      "artifacts": {
        "ISuperfluidToken": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ISuperfluidToken.sol/ISuperfluidToken.json"
        }
      }
    },
    "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol": {
      "lastModificationDate": 1687941950483,
      "contentHash": "8682ecaec382d776159f56809ed3a0ef",
      "sourceName": "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol"
      ],
      "versionRequirement": null,
      "artifacts": {
        "ERC20WithTokenInfo": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ERC20WithTokenInfo.sol/ERC20WithTokenInfo.json"
        }
      }
    },
    "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol": {
      "lastModificationDate": 1687941950483,
      "contentHash": "da20f4255b68517dfa9f252b8df5cd7a",
      "sourceName": "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": null,
      "artifacts": {
        "TokenInfo": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "TokenInfo.sol/TokenInfo.json"
        }
      }
    },
    "lib/protocol-monorepo/packages/ethereum-contracts/contracts/libs/ERC777Helper.sol": {
      "lastModificationDate": 1687941950484,
      "contentHash": "494b365c7bac7b39b2fdd143a6d542ce",
      "sourceName": "lib/protocol-monorepo/packages/ethereum-contracts/contracts/libs/ERC777Helper.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "ERC777Helper": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "ERC777Helper.sol/ERC777Helper.json"
        }
      }
    },
    "lib/protocol-monorepo/packages/ethereum-contracts/contracts/libs/EventsEmitter.sol": {
      "lastModificationDate": 1687941950484,
      "contentHash": "ae3bdcebbdffbb1443b14fcfa0532c07",
      "sourceName": "lib/protocol-monorepo/packages/ethereum-contracts/contracts/libs/EventsEmitter.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "EventsEmitter": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "EventsEmitter.sol/EventsEmitter.json"
        }
      }
    },
    "lib/protocol-monorepo/packages/ethereum-contracts/contracts/libs/FixedSizeData.sol": {
      "lastModificationDate": 1687941950484,
      "contentHash": "4bcdc2392096131058bc73fe9d13492a",
      "sourceName": "lib/protocol-monorepo/packages/ethereum-contracts/contracts/libs/FixedSizeData.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "FixedSizeData": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "FixedSizeData.sol/FixedSizeData.json"
        }
      }
    },
    "lib/protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/SuperToken.sol": {
      "lastModificationDate": 1687941950487,
      "contentHash": "ab6b86fa7d6f3ef2ebfc984153b844f8",
      "sourceName": "lib/protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/SuperToken.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantInflowNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantOutflowNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IFlowNFTBase.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolAdminNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolMemberNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolNFTBase.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/libs/ERC777Helper.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/libs/EventsEmitter.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/libs/FixedSizeData.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/SuperfluidToken.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSProxiable.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSUtils.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "SuperToken": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "SuperToken.sol/SuperToken.json"
        }
      }
    },
    "lib/protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/SuperfluidToken.sol": {
      "lastModificationDate": 1687941950488,
      "contentHash": "b1d59d621cbf8e0104f0f12280dd3c00",
      "sourceName": "lib/protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/SuperfluidToken.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantInflowNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantOutflowNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IFlowNFTBase.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolAdminNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolMemberNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolNFTBase.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/libs/EventsEmitter.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/libs/FixedSizeData.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "SuperfluidToken": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "SuperfluidToken.sol/SuperfluidToken.json"
        }
      }
    },
    "lib/protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSProxiable.sol": {
      "lastModificationDate": 1687941950488,
      "contentHash": "ad348ec28b938151d3ed240486af829e",
      "sourceName": "lib/protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSProxiable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSUtils.sol"
      ],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "UUPSProxiable": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "UUPSProxiable.sol/UUPSProxiable.json"
        }
      }
    },
    "lib/protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSUtils.sol": {
      "lastModificationDate": 1687941950488,
      "contentHash": "2ae27b1e523379a8bf8131a711691c46",
      "sourceName": "lib/protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSUtils.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "=0.8.19",
      "artifacts": {
        "UUPSUtils": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "UUPSUtils.sol/UUPSUtils.json"
        }
      }
    },
    "src/GDAExplo.sol": {
      "lastModificationDate": 1687963215496,
      "contentHash": "cde6c461dc2e2a220b1bd3f207c3808d",
      "sourceName": "src/GDAExplo.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/apps/SuperTokenV1Library.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IGeneralDistributionAgreementV1.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IInstantDistributionAgreementV1.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantInflowNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantOutflowNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IFlowNFTBase.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolAdminNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolMemberNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolNFTBase.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidPool.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol"
      ],
      "versionRequirement": "^0.8.18",
      "artifacts": {
        "GDAExplo": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "GDAExplo.sol/GDAExplo.json"
        }
      }
    },
    "src/MockSuperToken.sol": {
      "lastModificationDate": 1687955260606,
      "contentHash": "b9bee7e7a8312f2f151588744393e24b",
      "sourceName": "src/MockSuperToken.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantInflowNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantOutflowNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IFlowNFTBase.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolAdminNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolMemberNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolNFTBase.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/libs/ERC777Helper.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/libs/EventsEmitter.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/libs/FixedSizeData.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/SuperToken.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/SuperfluidToken.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSProxiable.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSUtils.sol"
      ],
      "versionRequirement": "^0.8.18",
      "artifacts": {
        "MockSuperToken": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "MockSuperToken.sol/MockSuperToken.json"
        }
      }
    },
    "test/GDAExplo.t.sol": {
      "lastModificationDate": 1687963200486,
      "contentHash": "c8d322aab046aba9ff2f4aeb772d6c85",
      "sourceName": "test/GDAExplo.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          },
          "metadata": {
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdStyle.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol",
        "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/apps/SuperTokenV1Library.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IGeneralDistributionAgreementV1.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IInstantDistributionAgreementV1.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantInflowNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantOutflowNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IFlowNFTBase.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolAdminNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolMemberNFT.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolNFTBase.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidPool.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/libs/ERC777Helper.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/libs/EventsEmitter.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/libs/FixedSizeData.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/SuperToken.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/SuperfluidToken.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSProxiable.sol",
        "lib/protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSUtils.sol",
        "src/GDAExplo.sol",
        "src/MockSuperToken.sol"
      ],
      "versionRequirement": "^0.8.13",
      "artifacts": {
        "GDAExploTest": {
          "0.8.19+commit.7dd6d404.Darwin.appleclang": "GDAExplo.t.sol/GDAExploTest.json"
        }
      }
    }
  }
}